<?xml version="1.0" ?>
<robot name="isi_robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- ****************** ROBOT CONSTANTS *******************************  -->
  <xacro:property name="base_width" value="0.39"/>
  <xacro:property name="base_length" value="0.70"/>
  <xacro:property name="base_height" value="0.20"/>
  <xacro:property name="wheel_radius" value="0.14"/>
  <xacro:property name="wheel_width" value="0.06"/>
  <xacro:property name="wheel_ygap" value="0.035"/>
  <xacro:property name="wheel_zoff" value="0.05"/>
  <xacro:property name="wheel_xoff" value="0.221"/>
  <xacro:property name="caster_xoff" value="0.217"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}" iyz="0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <link name="base_footprint"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0.0 0.0 ${(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0.0" rpy="0.0 0 0.0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Red">
        <color rgba="${255/255} ${0/255} ${0/255} 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="40.0" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <!-- *********************** DRIVE WHEELS 1 ******************************  -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="White">
          <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="1.0" r="${wheel_radius}" h="${wheel_width}"/>
    </link>
    <joint name="${prefix}_joint" type="revolute">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <limit upper="1.79769e+308" lower="-1.79769e+308" effort="60" velocity="10.0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  
  <gazebo reference="drivewhl_l_link">
    <mu1>1</mu1>
    <mu2>1</mu2>    
  </gazebo>
  
  <gazebo reference="drivewhl_r_link">
    <mu1>1</mu1>
    <mu2>1</mu2>    
  </gazebo>
  
  <!-- *********************** DRIVE WHEELS 1 ******************************  -->
  <xacro:macro name="wheel2" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="White">
          <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="1.0" r="${wheel_radius}" h="${wheel_width}"/>
    </link>
    <joint name="${prefix}_joint" type="revolute">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${-x_reflect*wheel_xoff} ${-y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <limit upper="1.79769e+308" lower="-1.79769e+308" effort="60" velocity="10.0"/>
      <axis xyz="0 1 0"/>
   	 </joint>
	  </xacro:macro>

	  <xacro:wheel2 prefix="drivewhl_l2" x_reflect="-1" y_reflect="1" />
	  <xacro:wheel2 prefix="drivewhl_r2" x_reflect="-1" y_reflect="-1" />
	  
	  <gazebo reference="drivewhl_l2_link">
		 <mu1>1</mu1>
		 <mu2>1</mu2>    
	  </gazebo>
	  
	  <gazebo reference="drivewhl_r2_link">
		 <mu1>1</mu1>
		 <mu2>1</mu2>    
	  </gazebo>

    <!-- *********************** IMU SETUP *********************************  -->
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="-0.10 0 0.05" rpy="0 0 0"/>
  </joint>

  <link name="imu_link"/>
  <gazebo reference="imu_link">
    <sensor type="imu" name="imu_sensor">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>/imu</topic>
      <plugin filename="libignition-gazebo-imu-system.so" name="ignition::gazebo::systems::Imu">
        <topic>/imu</topic>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>0.0002</stddev>
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.0</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>0.017</stddev>
            <bias_mean>0.0</bias_mean>
            <bias_stddev>0.0</bias_stddev>
          </accel>
        </noise>
      </plugin>
    </sensor>
  </gazebo>

  <!-- *********************** GPS SETUP **********************************  -->
  <joint name="gps_joint" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
    <origin xyz="0.10 0 0.05" rpy="0 0 0"/>
  </joint>

  <link name="gps_link"/> 

  <!-- *********************  LIDAR SETUP ******************************** -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <box size="0.025 0.025 0.025"/>
      </geometry>
      <material name="Blue">
        <color rgba="0 0 1 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.025 0.025 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.000166667" ixy="0.0" ixz="0.0" iyy="0.000166667" iyz="0.0" izz="0.000166667"/>
    </inertial>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.0 0.0 -0.1125" rpy="0 1.57 0"/>
  </joint>

  <gazebo reference="lidar_link">
    <sensor type="gpu_ray" name="lidar_sensor">
      <topic>/lidar</topic>
      <pose>0.0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>100</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.01</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libignition-gazebo-sensors-system.so" name="ignition::gazebo::systems::Sensors">
        <topicName>/lidar</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- *********************  Gazebo Plugin - Diff Drive ******************************** -->
  <gazebo>
    <plugin filename="ignition-gazebo-diff-drive-system" name="ignition::gazebo::systems::DiffDrive">
      <left_joint>drivewhl_l_joint</left_joint>  	  
      <right_joint>drivewhl_r_joint</right_joint>
      <wheel_separation>${base_length}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <odom_publish_frequency>1</odom_publish_frequency>
      <topic>/cmd_vel</topic>
    </plugin>
  </gazebo>
  
  <gazebo>
    <plugin filename="ignition-gazebo-diff-drive-system" name="ignition::gazebo::systems::DiffDrive">
      <left_joint>drivewhl_r2_joint</left_joint>  	  
      <right_joint>drivewhl_l2_joint</right_joint>
      <wheel_separation>${base_length}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <odom_publish_frequency>1</odom_publish_frequency>
      <topic>/cmd_vel</topic>
    </plugin>
  </gazebo>

  <!-- *********************  Gazebo Plugin - Magnetic Force ******************************** -->
  <gazebo>
    <plugin name="magnetic_adhesion_plugin" filename="libmagnetic_adhesion_plugin.so">
      <entity_name>base_footprint</entity_name>
      <topic>/lidar</topic>
      <topicName>/magnetic_force_right</topicName>
      <verbose>true</verbose>
    </plugin>
  </gazebo>
</robot>
